CREATE OR REPLACE PACKAGE oasis_health_check_cis
  AUTHID CURRENT_USER -- [ DO NOT EDIT! Invoker Rights Clause ]
  IS
 /****************************************************************************
  *
  * ---------------------------------------------------------------------------
  * $Revision 1.0  03/20/2018   $$Author Athi $
  *****************************************************************************
  *  Copyright(C) 2018 - Delphi Technology Inc.
  *
  *   File Name : oasis_health_check_output.pkg
  * Object Name : oasis_health_check_output
  * Description : health check and validation for output sub system
  *----------------------------------------------------------------------------
  * Revisions:
  *   Date    By     Purpose
  * -------- ------- ----------------------------------------------------------
  *
  *****************************************************************************/
  -- ========================================================================
  -- ===== PACKAGE LEVEL PUBLIC DECLARATIONS ================================
  -- ========================================================================
  -- === Template variables and constants.
  g_trace   BOOLEAN := FALSE; -- To turn output on/off for debug purposes.
  g_updated BOOLEAN := FALSE; -- To turn output on/off for heatlh check table being altered.

  PROCEDURE main;

END oasis_health_check_cis;
/
CREATE OR REPLACE PACKAGE BODY oasis_health_check_cis IS
  -- ========================================================================
  -- ===== PACKAGE LEVEL PRIVATE DECLARATIONS ===============================
  -- ========================================================================
  -- === Template variables and constants.
  g_error       EXCEPTION;
  g_time_format VARCHAR2(12);
  g_date_format VARCHAR2(12);

  v_obj_name        CONSTANT VARCHAR2(30) := 'oasis_health_check_cis'; -- Oracle object name
  v_msg_pref        CONSTANT VARCHAR2(20) := 'Error ';
  v_msg             VARCHAR2(4000); -- error/info message
  v_line            VARCHAR2 (255);
  v_run_date        DATE  := SYSDATE;
  v_run_code        VARCHAR2(50) := '';
  v_proc_name       VARCHAR2(50) := '';
  v_sub_system      VARCHAR2(25) := 'CIS';
  v_category        VARCHAR(25) := 'CIS_CFG';
  --v_data_code       VARCHAR2(25) := 'CIS_CFG_DATA';
  v_data_code       VARCHAR2(25) := '';
  v_sql_stmt        VARCHAR2(3000) := '';
  v_ok              VARCHAR2(2) := 'OK';
  v_review          VARCHAR2(7) := 'REVIEW';
  v_desc            VARCHAR2(255) := '';
  v_level           VARCHAR2(25);
  v_count           NUMBER(15);
  v_test_criteria_0 VARCHAR2(25) := 'COUNT=0';

  -- === Constants: <ConstantName> CONSTANT <DataType> := <Value>;
  -- === Types.
  -- === Variables of user-defined Types.
  -- === Cursors.
    --cis_sys_parms VARCHAR2(200) := 'PM_CHECK_NOTICE^ERROR';
  /**************************************************************************
  * pl
  *--------------------------------------------------------------------------
  * Short form for put_line. Output is controlled by the g_trace variable.
  ***************************************************************************/
  PROCEDURE pl(s IN VARCHAR2) IS
  BEGIN
    IF g_trace=TRUE THEN
      dbms_output.enable(1000000);
      --dbms_output.put_line(substr(s, 1, 255));
      dbms_output.put_line(s);
    END IF;
  END pl;

  PROCEDURE CIS_001 IS
  BEGIN
    v_proc_name := 'CIS_001';
    v_run_code := v_proc_name;
    v_desc := v_obj_name||'.'||v_proc_name||' - Orphaned Entity Roles in the system';
    v_level := 'WARNING';
    pl('Checking for ' || v_desc || ' : ' || v_level);

    v_sql_stmt := 'SELECT count(*)
    FROM entity_role er, entity e
    WHERE er.entity_fk = e.entity_pk
          AND e.discarded_b = ''Y''';

    EXECUTE IMMEDIATE v_sql_stmt INTO v_count;
    
    oasis_health_check_main.verify_count(v_level, v_sub_system, v_category, v_data_code, v_test_criteria_0, 
                        v_count, v_desc,'ENTITY_ROLE records pointing to a discarded ENTITY record', 
                        v_sql_stmt, v_run_code);
  END CIS_001;

  PROCEDURE CIS_002 IS
  BEGIN
    v_proc_name := 'CIS_002';
    v_run_code := v_proc_name;
    v_desc := v_obj_name||'.'||v_proc_name||' - Entities without primary address';
    v_level := 'WARNING';
    pl('Checking for ' || v_desc || ' : ' || v_level);
    
    --get all entities with no primary address
    v_sql_stmt := 'select count(*)
    from entity e
    where not exists(
    select null from address a
    where a.PRIMARY_ADDRESS_B=''Y''
    and a.EFFECTIVE_TO_DATE = TO_DATE(''01/01/3000'', ''MM/DD/YYYY'')
    and a.SOURCE_TABLE_NAME=''ENTITY''
    and a.SOURCE_RECORD_FK=e.entity_pk
    )';

    EXECUTE IMMEDIATE v_sql_stmt INTO v_count;
    
    oasis_health_check_main.verify_count(v_level, v_sub_system, v_category, v_data_code, v_test_criteria_0, 
                        v_count, v_desc, 'entities found with no primary address', 
                        v_sql_stmt, v_run_code);
  END CIS_002;

  /**************************************************************************
  * Main
  ***************************************************************************/
  PROCEDURE main IS
  BEGIN
    BEGIN
      CIS_001();
      CIS_002();
    END;
  END main;

  BEGIN
    g_trace := FALSE;

  EXCEPTION
    WHEN OTHERS THEN
      g_date_format := 'YYYY-MM-DD';
END oasis_health_check_cis;
/
